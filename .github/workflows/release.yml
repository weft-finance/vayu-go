name: Version and Release

on:
  push:
    branches:
      - main

jobs:
  bumping_version_and_releasing:
    runs-on: ubuntu-latest

    env:
      SUPPORTED_VERSIONS: "1.22.5 1.22.3"
      LATEST_VERSION: "1.22.5"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get the current version
        id: get_version
        run: |
          echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          echo "Current version: $VERSION"
          IFS='.' read -r major minor patch <<< "$VERSION"
          patch=$((patch+1))
          new_version="$major.$minor.$patch"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Update version in VERSION file
        run: echo ${{ env.new_version }} > VERSION

      - name: Commit version bump
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add VERSION
          git commit -m "Bump version to ${{ env.new_version }}"
          git push origin main

      - name: Create Go version-specific tags
        run: |
          for version in ${{ env.SUPPORTED_VERSIONS }}; do
            echo "Updating go.mod to Go version $version"
            go mod edit -go=$version
            go mod tidy
            git add go.mod go.sum
            git commit -m "Update go.mod for Go $version"
            git tag "v${{ env.new_version }}-go$version"
            git push origin "v${{ env.new_version }}-go$version"
          done

      - name: Update go.mod for latest version
        run: |
          echo "Updating go.mod to the latest Go version: ${{ env.LATEST_VERSION }}"
          go mod edit -go=${{ env.LATEST_VERSION }}
          go mod tidy
          git add go.mod go.sum
          git commit -m "Update go.mod to latest Go version ${{ env.LATEST_VERSION }}"
          git tag "latest" --force
          git push origin "latest" --force

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ env.new_version }}"
          release_name: "v${{ env.new_version }}"
          body: |
            Release version ${{ env.new_version }}

            ### Supported Go Versions:

            {% for version in '${{ env.SUPPORTED_VERSIONS }}'.split(' ') %}
            - [v${{ env.new_version }}-go{{ version }}](https://github.com/weft-finance/vayu-go/releases/tag/v${{ env.new_version }}-go{{ version }})
            {% endfor %}
            - [latest](https://github.com/weft-finance/vayu-go/releases/tag/latest)
          draft: false
          prerelease: false
