/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the NetSuiteSyncInvoicesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetSuiteSyncInvoicesResponse{}

// NetSuiteSyncInvoicesResponse struct for NetSuiteSyncInvoicesResponse
type NetSuiteSyncInvoicesResponse struct {
	RecordId string `json:"recordId"`
	TranId string `json:"tranId"`
}

type _NetSuiteSyncInvoicesResponse NetSuiteSyncInvoicesResponse

// NewNetSuiteSyncInvoicesResponse instantiates a new NetSuiteSyncInvoicesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetSuiteSyncInvoicesResponse(recordId string, tranId string) *NetSuiteSyncInvoicesResponse {
	this := NetSuiteSyncInvoicesResponse{}
	this.RecordId = recordId
	this.TranId = tranId
	return &this
}

// NewNetSuiteSyncInvoicesResponseWithDefaults instantiates a new NetSuiteSyncInvoicesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetSuiteSyncInvoicesResponseWithDefaults() *NetSuiteSyncInvoicesResponse {
	this := NetSuiteSyncInvoicesResponse{}
	return &this
}

// GetRecordId returns the RecordId field value
func (o *NetSuiteSyncInvoicesResponse) GetRecordId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordId
}

// GetRecordIdOk returns a tuple with the RecordId field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesResponse) GetRecordIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordId, true
}

// SetRecordId sets field value
func (o *NetSuiteSyncInvoicesResponse) SetRecordId(v string) {
	o.RecordId = v
}

// GetTranId returns the TranId field value
func (o *NetSuiteSyncInvoicesResponse) GetTranId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesResponse) GetTranIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TranId, true
}

// SetTranId sets field value
func (o *NetSuiteSyncInvoicesResponse) SetTranId(v string) {
	o.TranId = v
}

func (o NetSuiteSyncInvoicesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetSuiteSyncInvoicesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recordId"] = o.RecordId
	toSerialize["tranId"] = o.TranId
	return toSerialize, nil
}

func (o *NetSuiteSyncInvoicesResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recordId",
		"tranId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetSuiteSyncInvoicesResponse := _NetSuiteSyncInvoicesResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetSuiteSyncInvoicesResponse)

	if err != nil {
		return err
	}

	*o = NetSuiteSyncInvoicesResponse(varNetSuiteSyncInvoicesResponse)

	return err
}

type NullableNetSuiteSyncInvoicesResponse struct {
	value *NetSuiteSyncInvoicesResponse
	isSet bool
}

func (v NullableNetSuiteSyncInvoicesResponse) Get() *NetSuiteSyncInvoicesResponse {
	return v.value
}

func (v *NullableNetSuiteSyncInvoicesResponse) Set(val *NetSuiteSyncInvoicesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableNetSuiteSyncInvoicesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableNetSuiteSyncInvoicesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetSuiteSyncInvoicesResponse(val *NetSuiteSyncInvoicesResponse) *NullableNetSuiteSyncInvoicesResponse {
	return &NullableNetSuiteSyncInvoicesResponse{value: val, isSet: true}
}

func (v NullableNetSuiteSyncInvoicesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetSuiteSyncInvoicesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


