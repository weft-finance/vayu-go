/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PlanBillingData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlanBillingData{}

// PlanBillingData The billing data of the plan. The billing data contains the billing interval, the plan duration the payment terms and auto renewal, and the billing method.
type PlanBillingData struct {
	BillingInterval BillingInterval `json:"billingInterval"`
	Duration float32 `json:"duration"`
	PaymentTerm PaymentTerm `json:"paymentTerm"`
	AutoRenewal bool `json:"autoRenewal"`
	ProRated bool `json:"proRated"`
}

type _PlanBillingData PlanBillingData

// NewPlanBillingData instantiates a new PlanBillingData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlanBillingData(billingInterval BillingInterval, duration float32, paymentTerm PaymentTerm, autoRenewal bool, proRated bool) *PlanBillingData {
	this := PlanBillingData{}
	this.BillingInterval = billingInterval
	this.Duration = duration
	this.PaymentTerm = paymentTerm
	this.AutoRenewal = autoRenewal
	this.ProRated = proRated
	return &this
}

// NewPlanBillingDataWithDefaults instantiates a new PlanBillingData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlanBillingDataWithDefaults() *PlanBillingData {
	this := PlanBillingData{}
	var paymentTerm PaymentTerm = POSTPAYMENT
	this.PaymentTerm = paymentTerm
	var autoRenewal bool = false
	this.AutoRenewal = autoRenewal
	var proRated bool = true
	this.ProRated = proRated
	return &this
}

// GetBillingInterval returns the BillingInterval field value
func (o *PlanBillingData) GetBillingInterval() BillingInterval {
	if o == nil {
		var ret BillingInterval
		return ret
	}

	return o.BillingInterval
}

// GetBillingIntervalOk returns a tuple with the BillingInterval field value
// and a boolean to check if the value has been set.
func (o *PlanBillingData) GetBillingIntervalOk() (*BillingInterval, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingInterval, true
}

// SetBillingInterval sets field value
func (o *PlanBillingData) SetBillingInterval(v BillingInterval) {
	o.BillingInterval = v
}

// GetDuration returns the Duration field value
func (o *PlanBillingData) GetDuration() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *PlanBillingData) GetDurationOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *PlanBillingData) SetDuration(v float32) {
	o.Duration = v
}

// GetPaymentTerm returns the PaymentTerm field value
func (o *PlanBillingData) GetPaymentTerm() PaymentTerm {
	if o == nil {
		var ret PaymentTerm
		return ret
	}

	return o.PaymentTerm
}

// GetPaymentTermOk returns a tuple with the PaymentTerm field value
// and a boolean to check if the value has been set.
func (o *PlanBillingData) GetPaymentTermOk() (*PaymentTerm, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PaymentTerm, true
}

// SetPaymentTerm sets field value
func (o *PlanBillingData) SetPaymentTerm(v PaymentTerm) {
	o.PaymentTerm = v
}

// GetAutoRenewal returns the AutoRenewal field value
func (o *PlanBillingData) GetAutoRenewal() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoRenewal
}

// GetAutoRenewalOk returns a tuple with the AutoRenewal field value
// and a boolean to check if the value has been set.
func (o *PlanBillingData) GetAutoRenewalOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoRenewal, true
}

// SetAutoRenewal sets field value
func (o *PlanBillingData) SetAutoRenewal(v bool) {
	o.AutoRenewal = v
}

// GetProRated returns the ProRated field value
func (o *PlanBillingData) GetProRated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ProRated
}

// GetProRatedOk returns a tuple with the ProRated field value
// and a boolean to check if the value has been set.
func (o *PlanBillingData) GetProRatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProRated, true
}

// SetProRated sets field value
func (o *PlanBillingData) SetProRated(v bool) {
	o.ProRated = v
}

func (o PlanBillingData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlanBillingData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["billingInterval"] = o.BillingInterval
	toSerialize["duration"] = o.Duration
	toSerialize["paymentTerm"] = o.PaymentTerm
	toSerialize["autoRenewal"] = o.AutoRenewal
	toSerialize["proRated"] = o.ProRated
	return toSerialize, nil
}

func (o *PlanBillingData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"billingInterval",
		"duration",
		"paymentTerm",
		"autoRenewal",
		"proRated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPlanBillingData := _PlanBillingData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPlanBillingData)

	if err != nil {
		return err
	}

	*o = PlanBillingData(varPlanBillingData)

	return err
}

type NullablePlanBillingData struct {
	value *PlanBillingData
	isSet bool
}

func (v NullablePlanBillingData) Get() *PlanBillingData {
	return v.value
}

func (v *NullablePlanBillingData) Set(val *PlanBillingData) {
	v.value = val
	v.isSet = true
}

func (v NullablePlanBillingData) IsSet() bool {
	return v.isSet
}

func (v *NullablePlanBillingData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlanBillingData(val *PlanBillingData) *NullablePlanBillingData {
	return &NullablePlanBillingData{value: val, isSet: true}
}

func (v NullablePlanBillingData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlanBillingData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


