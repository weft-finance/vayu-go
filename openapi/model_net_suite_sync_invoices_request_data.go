/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the NetSuiteSyncInvoicesRequestData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetSuiteSyncInvoicesRequestData{}

// NetSuiteSyncInvoicesRequestData struct for NetSuiteSyncInvoicesRequestData
type NetSuiteSyncInvoicesRequestData struct {
	StartDate time.Time `json:"startDate"`
	EndDate time.Time `json:"endDate"`
	TranDate time.Time `json:"tranDate"`
	Memo string `json:"memo"`
	ExternalId string `json:"externalId" validate:"regexp=^[0-9a-fA-F]{24}$"`
	Entity NetSuiteSyncInvoicesRequestDataEntity `json:"entity"`
	Account *NetSuiteSyncInvoicesRequestDataEntity `json:"account,omitempty"`
	Item NetSuiteSyncInvoicesRequestDataItem `json:"item"`
	DiscountItem *NetSuiteSyncInvoicesRequestDataEntity `json:"discountItem,omitempty"`
	DiscountRate *float32 `json:"discountRate,omitempty"`
}

type _NetSuiteSyncInvoicesRequestData NetSuiteSyncInvoicesRequestData

// NewNetSuiteSyncInvoicesRequestData instantiates a new NetSuiteSyncInvoicesRequestData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetSuiteSyncInvoicesRequestData(startDate time.Time, endDate time.Time, tranDate time.Time, memo string, externalId string, entity NetSuiteSyncInvoicesRequestDataEntity, item NetSuiteSyncInvoicesRequestDataItem) *NetSuiteSyncInvoicesRequestData {
	this := NetSuiteSyncInvoicesRequestData{}
	this.StartDate = startDate
	this.EndDate = endDate
	this.TranDate = tranDate
	this.Memo = memo
	this.ExternalId = externalId
	this.Entity = entity
	this.Item = item
	return &this
}

// NewNetSuiteSyncInvoicesRequestDataWithDefaults instantiates a new NetSuiteSyncInvoicesRequestData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetSuiteSyncInvoicesRequestDataWithDefaults() *NetSuiteSyncInvoicesRequestData {
	this := NetSuiteSyncInvoicesRequestData{}
	return &this
}

// GetStartDate returns the StartDate field value
func (o *NetSuiteSyncInvoicesRequestData) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *NetSuiteSyncInvoicesRequestData) SetStartDate(v time.Time) {
	o.StartDate = v
}

// GetEndDate returns the EndDate field value
func (o *NetSuiteSyncInvoicesRequestData) GetEndDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetEndDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDate, true
}

// SetEndDate sets field value
func (o *NetSuiteSyncInvoicesRequestData) SetEndDate(v time.Time) {
	o.EndDate = v
}

// GetTranDate returns the TranDate field value
func (o *NetSuiteSyncInvoicesRequestData) GetTranDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TranDate
}

// GetTranDateOk returns a tuple with the TranDate field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetTranDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TranDate, true
}

// SetTranDate sets field value
func (o *NetSuiteSyncInvoicesRequestData) SetTranDate(v time.Time) {
	o.TranDate = v
}

// GetMemo returns the Memo field value
func (o *NetSuiteSyncInvoicesRequestData) GetMemo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Memo
}

// GetMemoOk returns a tuple with the Memo field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetMemoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Memo, true
}

// SetMemo sets field value
func (o *NetSuiteSyncInvoicesRequestData) SetMemo(v string) {
	o.Memo = v
}

// GetExternalId returns the ExternalId field value
func (o *NetSuiteSyncInvoicesRequestData) GetExternalId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalId, true
}

// SetExternalId sets field value
func (o *NetSuiteSyncInvoicesRequestData) SetExternalId(v string) {
	o.ExternalId = v
}

// GetEntity returns the Entity field value
func (o *NetSuiteSyncInvoicesRequestData) GetEntity() NetSuiteSyncInvoicesRequestDataEntity {
	if o == nil {
		var ret NetSuiteSyncInvoicesRequestDataEntity
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetEntityOk() (*NetSuiteSyncInvoicesRequestDataEntity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *NetSuiteSyncInvoicesRequestData) SetEntity(v NetSuiteSyncInvoicesRequestDataEntity) {
	o.Entity = v
}

// GetAccount returns the Account field value if set, zero value otherwise.
func (o *NetSuiteSyncInvoicesRequestData) GetAccount() NetSuiteSyncInvoicesRequestDataEntity {
	if o == nil || IsNil(o.Account) {
		var ret NetSuiteSyncInvoicesRequestDataEntity
		return ret
	}
	return *o.Account
}

// GetAccountOk returns a tuple with the Account field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetAccountOk() (*NetSuiteSyncInvoicesRequestDataEntity, bool) {
	if o == nil || IsNil(o.Account) {
		return nil, false
	}
	return o.Account, true
}

// HasAccount returns a boolean if a field has been set.
func (o *NetSuiteSyncInvoicesRequestData) HasAccount() bool {
	if o != nil && !IsNil(o.Account) {
		return true
	}

	return false
}

// SetAccount gets a reference to the given NetSuiteSyncInvoicesRequestDataEntity and assigns it to the Account field.
func (o *NetSuiteSyncInvoicesRequestData) SetAccount(v NetSuiteSyncInvoicesRequestDataEntity) {
	o.Account = &v
}

// GetItem returns the Item field value
func (o *NetSuiteSyncInvoicesRequestData) GetItem() NetSuiteSyncInvoicesRequestDataItem {
	if o == nil {
		var ret NetSuiteSyncInvoicesRequestDataItem
		return ret
	}

	return o.Item
}

// GetItemOk returns a tuple with the Item field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetItemOk() (*NetSuiteSyncInvoicesRequestDataItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Item, true
}

// SetItem sets field value
func (o *NetSuiteSyncInvoicesRequestData) SetItem(v NetSuiteSyncInvoicesRequestDataItem) {
	o.Item = v
}

// GetDiscountItem returns the DiscountItem field value if set, zero value otherwise.
func (o *NetSuiteSyncInvoicesRequestData) GetDiscountItem() NetSuiteSyncInvoicesRequestDataEntity {
	if o == nil || IsNil(o.DiscountItem) {
		var ret NetSuiteSyncInvoicesRequestDataEntity
		return ret
	}
	return *o.DiscountItem
}

// GetDiscountItemOk returns a tuple with the DiscountItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetDiscountItemOk() (*NetSuiteSyncInvoicesRequestDataEntity, bool) {
	if o == nil || IsNil(o.DiscountItem) {
		return nil, false
	}
	return o.DiscountItem, true
}

// HasDiscountItem returns a boolean if a field has been set.
func (o *NetSuiteSyncInvoicesRequestData) HasDiscountItem() bool {
	if o != nil && !IsNil(o.DiscountItem) {
		return true
	}

	return false
}

// SetDiscountItem gets a reference to the given NetSuiteSyncInvoicesRequestDataEntity and assigns it to the DiscountItem field.
func (o *NetSuiteSyncInvoicesRequestData) SetDiscountItem(v NetSuiteSyncInvoicesRequestDataEntity) {
	o.DiscountItem = &v
}

// GetDiscountRate returns the DiscountRate field value if set, zero value otherwise.
func (o *NetSuiteSyncInvoicesRequestData) GetDiscountRate() float32 {
	if o == nil || IsNil(o.DiscountRate) {
		var ret float32
		return ret
	}
	return *o.DiscountRate
}

// GetDiscountRateOk returns a tuple with the DiscountRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequestData) GetDiscountRateOk() (*float32, bool) {
	if o == nil || IsNil(o.DiscountRate) {
		return nil, false
	}
	return o.DiscountRate, true
}

// HasDiscountRate returns a boolean if a field has been set.
func (o *NetSuiteSyncInvoicesRequestData) HasDiscountRate() bool {
	if o != nil && !IsNil(o.DiscountRate) {
		return true
	}

	return false
}

// SetDiscountRate gets a reference to the given float32 and assigns it to the DiscountRate field.
func (o *NetSuiteSyncInvoicesRequestData) SetDiscountRate(v float32) {
	o.DiscountRate = &v
}

func (o NetSuiteSyncInvoicesRequestData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetSuiteSyncInvoicesRequestData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startDate"] = o.StartDate
	toSerialize["endDate"] = o.EndDate
	toSerialize["tranDate"] = o.TranDate
	toSerialize["memo"] = o.Memo
	toSerialize["externalId"] = o.ExternalId
	toSerialize["entity"] = o.Entity
	if !IsNil(o.Account) {
		toSerialize["account"] = o.Account
	}
	toSerialize["item"] = o.Item
	if !IsNil(o.DiscountItem) {
		toSerialize["discountItem"] = o.DiscountItem
	}
	if !IsNil(o.DiscountRate) {
		toSerialize["discountRate"] = o.DiscountRate
	}
	return toSerialize, nil
}

func (o *NetSuiteSyncInvoicesRequestData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startDate",
		"endDate",
		"tranDate",
		"memo",
		"externalId",
		"entity",
		"item",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetSuiteSyncInvoicesRequestData := _NetSuiteSyncInvoicesRequestData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varNetSuiteSyncInvoicesRequestData)

	if err != nil {
		return err
	}

	*o = NetSuiteSyncInvoicesRequestData(varNetSuiteSyncInvoicesRequestData)

	return err
}

type NullableNetSuiteSyncInvoicesRequestData struct {
	value *NetSuiteSyncInvoicesRequestData
	isSet bool
}

func (v NullableNetSuiteSyncInvoicesRequestData) Get() *NetSuiteSyncInvoicesRequestData {
	return v.value
}

func (v *NullableNetSuiteSyncInvoicesRequestData) Set(val *NetSuiteSyncInvoicesRequestData) {
	v.value = val
	v.isSet = true
}

func (v NullableNetSuiteSyncInvoicesRequestData) IsSet() bool {
	return v.isSet
}

func (v *NullableNetSuiteSyncInvoicesRequestData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetSuiteSyncInvoicesRequestData(val *NetSuiteSyncInvoicesRequestData) *NullableNetSuiteSyncInvoicesRequestData {
	return &NullableNetSuiteSyncInvoicesRequestData{value: val, isSet: true}
}

func (v NullableNetSuiteSyncInvoicesRequestData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetSuiteSyncInvoicesRequestData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


