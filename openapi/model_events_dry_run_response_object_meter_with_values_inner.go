/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the EventsDryRunResponseObjectMeterWithValuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventsDryRunResponseObjectMeterWithValuesInner{}

// EventsDryRunResponseObjectMeterWithValuesInner struct for EventsDryRunResponseObjectMeterWithValuesInner
type EventsDryRunResponseObjectMeterWithValuesInner struct {
	// The name of the meter
	Name string `json:"name"`
	// The name of the event that the meter is tracking.
	EventName string `json:"eventName"`
	AggregationMethod AggregationMethod `json:"aggregationMethod"`
	Filter *Filter `json:"filter,omitempty"`
	Value float32 `json:"value"`
	InstanceValue interface{} `json:"instanceValue,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EventsDryRunResponseObjectMeterWithValuesInner EventsDryRunResponseObjectMeterWithValuesInner

// NewEventsDryRunResponseObjectMeterWithValuesInner instantiates a new EventsDryRunResponseObjectMeterWithValuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsDryRunResponseObjectMeterWithValuesInner(name string, eventName string, aggregationMethod AggregationMethod, value float32) *EventsDryRunResponseObjectMeterWithValuesInner {
	this := EventsDryRunResponseObjectMeterWithValuesInner{}
	this.Name = name
	this.EventName = eventName
	this.AggregationMethod = aggregationMethod
	this.Value = value
	return &this
}

// NewEventsDryRunResponseObjectMeterWithValuesInnerWithDefaults instantiates a new EventsDryRunResponseObjectMeterWithValuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsDryRunResponseObjectMeterWithValuesInnerWithDefaults() *EventsDryRunResponseObjectMeterWithValuesInner {
	this := EventsDryRunResponseObjectMeterWithValuesInner{}
	return &this
}

// GetName returns the Name field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) SetName(v string) {
	o.Name = v
}

// GetEventName returns the EventName field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetEventName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventName
}

// GetEventNameOk returns a tuple with the EventName field value
// and a boolean to check if the value has been set.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetEventNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventName, true
}

// SetEventName sets field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) SetEventName(v string) {
	o.EventName = v
}

// GetAggregationMethod returns the AggregationMethod field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetAggregationMethod() AggregationMethod {
	if o == nil {
		var ret AggregationMethod
		return ret
	}

	return o.AggregationMethod
}

// GetAggregationMethodOk returns a tuple with the AggregationMethod field value
// and a boolean to check if the value has been set.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetAggregationMethodOk() (*AggregationMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AggregationMethod, true
}

// SetAggregationMethod sets field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) SetAggregationMethod(v AggregationMethod) {
	o.AggregationMethod = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetFilter() Filter {
	if o == nil || IsNil(o.Filter) {
		var ret Filter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetFilterOk() (*Filter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given Filter and assigns it to the Filter field.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) SetFilter(v Filter) {
	o.Filter = &v
}

// GetValue returns the Value field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetValue() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetValueOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *EventsDryRunResponseObjectMeterWithValuesInner) SetValue(v float32) {
	o.Value = v
}

// GetInstanceValue returns the InstanceValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetInstanceValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.InstanceValue
}

// GetInstanceValueOk returns a tuple with the InstanceValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventsDryRunResponseObjectMeterWithValuesInner) GetInstanceValueOk() (*interface{}, bool) {
	if o == nil || IsNil(o.InstanceValue) {
		return nil, false
	}
	return &o.InstanceValue, true
}

// HasInstanceValue returns a boolean if a field has been set.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) HasInstanceValue() bool {
	if o != nil && !IsNil(o.InstanceValue) {
		return true
	}

	return false
}

// SetInstanceValue gets a reference to the given interface{} and assigns it to the InstanceValue field.
func (o *EventsDryRunResponseObjectMeterWithValuesInner) SetInstanceValue(v interface{}) {
	o.InstanceValue = v
}

func (o EventsDryRunResponseObjectMeterWithValuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventsDryRunResponseObjectMeterWithValuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["eventName"] = o.EventName
	toSerialize["aggregationMethod"] = o.AggregationMethod
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	toSerialize["value"] = o.Value
	if o.InstanceValue != nil {
		toSerialize["instanceValue"] = o.InstanceValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EventsDryRunResponseObjectMeterWithValuesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"eventName",
		"aggregationMethod",
		"value",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventsDryRunResponseObjectMeterWithValuesInner := _EventsDryRunResponseObjectMeterWithValuesInner{}

	err = json.Unmarshal(data, &varEventsDryRunResponseObjectMeterWithValuesInner)

	if err != nil {
		return err
	}

	*o = EventsDryRunResponseObjectMeterWithValuesInner(varEventsDryRunResponseObjectMeterWithValuesInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "eventName")
		delete(additionalProperties, "aggregationMethod")
		delete(additionalProperties, "filter")
		delete(additionalProperties, "value")
		delete(additionalProperties, "instanceValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEventsDryRunResponseObjectMeterWithValuesInner struct {
	value *EventsDryRunResponseObjectMeterWithValuesInner
	isSet bool
}

func (v NullableEventsDryRunResponseObjectMeterWithValuesInner) Get() *EventsDryRunResponseObjectMeterWithValuesInner {
	return v.value
}

func (v *NullableEventsDryRunResponseObjectMeterWithValuesInner) Set(val *EventsDryRunResponseObjectMeterWithValuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsDryRunResponseObjectMeterWithValuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsDryRunResponseObjectMeterWithValuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsDryRunResponseObjectMeterWithValuesInner(val *EventsDryRunResponseObjectMeterWithValuesInner) *NullableEventsDryRunResponseObjectMeterWithValuesInner {
	return &NullableEventsDryRunResponseObjectMeterWithValuesInner{value: val, isSet: true}
}

func (v NullableEventsDryRunResponseObjectMeterWithValuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsDryRunResponseObjectMeterWithValuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


