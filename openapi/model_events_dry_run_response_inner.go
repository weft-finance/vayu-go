/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the EventsDryRunResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventsDryRunResponseInner{}

// EventsDryRunResponseInner struct for EventsDryRunResponseInner
type EventsDryRunResponseInner struct {
	Event EventsDryRunResponseInnerEvent `json:"event"`
	MatchedCustomer NullableString `json:"matchedCustomer,omitempty"`
	MeterWithValues []EventsDryRunResponseInnerMeterWithValuesInner `json:"meterWithValues"`
	AdditionalProperties map[string]interface{}
}

type _EventsDryRunResponseInner EventsDryRunResponseInner

// NewEventsDryRunResponseInner instantiates a new EventsDryRunResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsDryRunResponseInner(event EventsDryRunResponseInnerEvent, meterWithValues []EventsDryRunResponseInnerMeterWithValuesInner) *EventsDryRunResponseInner {
	this := EventsDryRunResponseInner{}
	this.Event = event
	this.MeterWithValues = meterWithValues
	return &this
}

// NewEventsDryRunResponseInnerWithDefaults instantiates a new EventsDryRunResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsDryRunResponseInnerWithDefaults() *EventsDryRunResponseInner {
	this := EventsDryRunResponseInner{}
	return &this
}

// GetEvent returns the Event field value
func (o *EventsDryRunResponseInner) GetEvent() EventsDryRunResponseInnerEvent {
	if o == nil {
		var ret EventsDryRunResponseInnerEvent
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *EventsDryRunResponseInner) GetEventOk() (*EventsDryRunResponseInnerEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *EventsDryRunResponseInner) SetEvent(v EventsDryRunResponseInnerEvent) {
	o.Event = v
}

// GetMatchedCustomer returns the MatchedCustomer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventsDryRunResponseInner) GetMatchedCustomer() string {
	if o == nil || IsNil(o.MatchedCustomer.Get()) {
		var ret string
		return ret
	}
	return *o.MatchedCustomer.Get()
}

// GetMatchedCustomerOk returns a tuple with the MatchedCustomer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventsDryRunResponseInner) GetMatchedCustomerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MatchedCustomer.Get(), o.MatchedCustomer.IsSet()
}

// HasMatchedCustomer returns a boolean if a field has been set.
func (o *EventsDryRunResponseInner) HasMatchedCustomer() bool {
	if o != nil && o.MatchedCustomer.IsSet() {
		return true
	}

	return false
}

// SetMatchedCustomer gets a reference to the given NullableString and assigns it to the MatchedCustomer field.
func (o *EventsDryRunResponseInner) SetMatchedCustomer(v string) {
	o.MatchedCustomer.Set(&v)
}
// SetMatchedCustomerNil sets the value for MatchedCustomer to be an explicit nil
func (o *EventsDryRunResponseInner) SetMatchedCustomerNil() {
	o.MatchedCustomer.Set(nil)
}

// UnsetMatchedCustomer ensures that no value is present for MatchedCustomer, not even an explicit nil
func (o *EventsDryRunResponseInner) UnsetMatchedCustomer() {
	o.MatchedCustomer.Unset()
}

// GetMeterWithValues returns the MeterWithValues field value
func (o *EventsDryRunResponseInner) GetMeterWithValues() []EventsDryRunResponseInnerMeterWithValuesInner {
	if o == nil {
		var ret []EventsDryRunResponseInnerMeterWithValuesInner
		return ret
	}

	return o.MeterWithValues
}

// GetMeterWithValuesOk returns a tuple with the MeterWithValues field value
// and a boolean to check if the value has been set.
func (o *EventsDryRunResponseInner) GetMeterWithValuesOk() ([]EventsDryRunResponseInnerMeterWithValuesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.MeterWithValues, true
}

// SetMeterWithValues sets field value
func (o *EventsDryRunResponseInner) SetMeterWithValues(v []EventsDryRunResponseInnerMeterWithValuesInner) {
	o.MeterWithValues = v
}

func (o EventsDryRunResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventsDryRunResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event"] = o.Event
	if o.MatchedCustomer.IsSet() {
		toSerialize["matchedCustomer"] = o.MatchedCustomer.Get()
	}
	toSerialize["meterWithValues"] = o.MeterWithValues

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EventsDryRunResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"event",
		"meterWithValues",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEventsDryRunResponseInner := _EventsDryRunResponseInner{}

	err = json.Unmarshal(data, &varEventsDryRunResponseInner)

	if err != nil {
		return err
	}

	*o = EventsDryRunResponseInner(varEventsDryRunResponseInner)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "event")
		delete(additionalProperties, "matchedCustomer")
		delete(additionalProperties, "meterWithValues")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEventsDryRunResponseInner struct {
	value *EventsDryRunResponseInner
	isSet bool
}

func (v NullableEventsDryRunResponseInner) Get() *EventsDryRunResponseInner {
	return v.value
}

func (v *NullableEventsDryRunResponseInner) Set(val *EventsDryRunResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsDryRunResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsDryRunResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsDryRunResponseInner(val *EventsDryRunResponseInner) *NullableEventsDryRunResponseInner {
	return &NullableEventsDryRunResponseInner{value: val, isSet: true}
}

func (v NullableEventsDryRunResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsDryRunResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


