/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the NetSuiteSyncInvoicesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetSuiteSyncInvoicesRequest{}

// NetSuiteSyncInvoicesRequest struct for NetSuiteSyncInvoicesRequest
type NetSuiteSyncInvoicesRequest struct {
	IntegrationType string `json:"integrationType"`
	Uid string `json:"uid"`
	Data NetSuiteSyncInvoicesRequestData `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _NetSuiteSyncInvoicesRequest NetSuiteSyncInvoicesRequest

// NewNetSuiteSyncInvoicesRequest instantiates a new NetSuiteSyncInvoicesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetSuiteSyncInvoicesRequest(integrationType string, uid string, data NetSuiteSyncInvoicesRequestData) *NetSuiteSyncInvoicesRequest {
	this := NetSuiteSyncInvoicesRequest{}
	this.IntegrationType = integrationType
	this.Uid = uid
	this.Data = data
	return &this
}

// NewNetSuiteSyncInvoicesRequestWithDefaults instantiates a new NetSuiteSyncInvoicesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetSuiteSyncInvoicesRequestWithDefaults() *NetSuiteSyncInvoicesRequest {
	this := NetSuiteSyncInvoicesRequest{}
	return &this
}

// GetIntegrationType returns the IntegrationType field value
func (o *NetSuiteSyncInvoicesRequest) GetIntegrationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IntegrationType
}

// GetIntegrationTypeOk returns a tuple with the IntegrationType field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequest) GetIntegrationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IntegrationType, true
}

// SetIntegrationType sets field value
func (o *NetSuiteSyncInvoicesRequest) SetIntegrationType(v string) {
	o.IntegrationType = v
}

// GetUid returns the Uid field value
func (o *NetSuiteSyncInvoicesRequest) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequest) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *NetSuiteSyncInvoicesRequest) SetUid(v string) {
	o.Uid = v
}

// GetData returns the Data field value
func (o *NetSuiteSyncInvoicesRequest) GetData() NetSuiteSyncInvoicesRequestData {
	if o == nil {
		var ret NetSuiteSyncInvoicesRequestData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *NetSuiteSyncInvoicesRequest) GetDataOk() (*NetSuiteSyncInvoicesRequestData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *NetSuiteSyncInvoicesRequest) SetData(v NetSuiteSyncInvoicesRequestData) {
	o.Data = v
}

func (o NetSuiteSyncInvoicesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetSuiteSyncInvoicesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["integrationType"] = o.IntegrationType
	toSerialize["uid"] = o.Uid
	toSerialize["data"] = o.Data

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetSuiteSyncInvoicesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"integrationType",
		"uid",
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetSuiteSyncInvoicesRequest := _NetSuiteSyncInvoicesRequest{}

	err = json.Unmarshal(data, &varNetSuiteSyncInvoicesRequest)

	if err != nil {
		return err
	}

	*o = NetSuiteSyncInvoicesRequest(varNetSuiteSyncInvoicesRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "integrationType")
		delete(additionalProperties, "uid")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetSuiteSyncInvoicesRequest struct {
	value *NetSuiteSyncInvoicesRequest
	isSet bool
}

func (v NullableNetSuiteSyncInvoicesRequest) Get() *NetSuiteSyncInvoicesRequest {
	return v.value
}

func (v *NullableNetSuiteSyncInvoicesRequest) Set(val *NetSuiteSyncInvoicesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableNetSuiteSyncInvoicesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableNetSuiteSyncInvoicesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetSuiteSyncInvoicesRequest(val *NetSuiteSyncInvoicesRequest) *NullableNetSuiteSyncInvoicesRequest {
	return &NullableNetSuiteSyncInvoicesRequest{value: val, isSet: true}
}

func (v NullableNetSuiteSyncInvoicesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetSuiteSyncInvoicesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


