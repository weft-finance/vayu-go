/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeleteCustomerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteCustomerResponse{}

// DeleteCustomerResponse struct for DeleteCustomerResponse
type DeleteCustomerResponse struct {
	Customer CreateCustomerResponseCustomer `json:"customer"`
}

type _DeleteCustomerResponse DeleteCustomerResponse

// NewDeleteCustomerResponse instantiates a new DeleteCustomerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteCustomerResponse(customer CreateCustomerResponseCustomer) *DeleteCustomerResponse {
	this := DeleteCustomerResponse{}
	this.Customer = customer
	return &this
}

// NewDeleteCustomerResponseWithDefaults instantiates a new DeleteCustomerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteCustomerResponseWithDefaults() *DeleteCustomerResponse {
	this := DeleteCustomerResponse{}
	return &this
}

// GetCustomer returns the Customer field value
func (o *DeleteCustomerResponse) GetCustomer() CreateCustomerResponseCustomer {
	if o == nil {
		var ret CreateCustomerResponseCustomer
		return ret
	}

	return o.Customer
}

// GetCustomerOk returns a tuple with the Customer field value
// and a boolean to check if the value has been set.
func (o *DeleteCustomerResponse) GetCustomerOk() (*CreateCustomerResponseCustomer, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Customer, true
}

// SetCustomer sets field value
func (o *DeleteCustomerResponse) SetCustomer(v CreateCustomerResponseCustomer) {
	o.Customer = v
}

func (o DeleteCustomerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteCustomerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customer"] = o.Customer
	return toSerialize, nil
}

func (o *DeleteCustomerResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customer",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteCustomerResponse := _DeleteCustomerResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteCustomerResponse)

	if err != nil {
		return err
	}

	*o = DeleteCustomerResponse(varDeleteCustomerResponse)

	return err
}

type NullableDeleteCustomerResponse struct {
	value *DeleteCustomerResponse
	isSet bool
}

func (v NullableDeleteCustomerResponse) Get() *DeleteCustomerResponse {
	return v.value
}

func (v *NullableDeleteCustomerResponse) Set(val *DeleteCustomerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteCustomerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteCustomerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteCustomerResponse(val *DeleteCustomerResponse) *NullableDeleteCustomerResponse {
	return &NullableDeleteCustomerResponse{value: val, isSet: true}
}

func (v NullableDeleteCustomerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteCustomerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


