/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCustomerRequest{}

// UpdateCustomerRequest struct for UpdateCustomerRequest
type UpdateCustomerRequest struct {
	// The name of the customer
	Name *string `json:"name,omitempty"`
	// The alias of the customer used to match events to the customer.
	Alias *string `json:"alias,omitempty"`
}

// NewUpdateCustomerRequest instantiates a new UpdateCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCustomerRequest() *UpdateCustomerRequest {
	this := UpdateCustomerRequest{}
	return &this
}

// NewUpdateCustomerRequestWithDefaults instantiates a new UpdateCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCustomerRequestWithDefaults() *UpdateCustomerRequest {
	this := UpdateCustomerRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCustomerRequest) SetName(v string) {
	o.Name = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *UpdateCustomerRequest) SetAlias(v string) {
	o.Alias = &v
}

func (o UpdateCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	return toSerialize, nil
}

type NullableUpdateCustomerRequest struct {
	value *UpdateCustomerRequest
	isSet bool
}

func (v NullableUpdateCustomerRequest) Get() *UpdateCustomerRequest {
	return v.value
}

func (v *NullableUpdateCustomerRequest) Set(val *UpdateCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCustomerRequest(val *UpdateCustomerRequest) *NullableUpdateCustomerRequest {
	return &NullableUpdateCustomerRequest{value: val, isSet: true}
}

func (v NullableUpdateCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


