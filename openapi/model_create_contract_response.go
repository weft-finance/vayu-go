/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateContractResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContractResponse{}

// CreateContractResponse struct for CreateContractResponse
type CreateContractResponse struct {
	Contract GetContractResponseContract `json:"contract"`
	AdditionalProperties map[string]interface{}
}

type _CreateContractResponse CreateContractResponse

// NewCreateContractResponse instantiates a new CreateContractResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContractResponse(contract GetContractResponseContract) *CreateContractResponse {
	this := CreateContractResponse{}
	this.Contract = contract
	return &this
}

// NewCreateContractResponseWithDefaults instantiates a new CreateContractResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContractResponseWithDefaults() *CreateContractResponse {
	this := CreateContractResponse{}
	return &this
}

// GetContract returns the Contract field value
func (o *CreateContractResponse) GetContract() GetContractResponseContract {
	if o == nil {
		var ret GetContractResponseContract
		return ret
	}

	return o.Contract
}

// GetContractOk returns a tuple with the Contract field value
// and a boolean to check if the value has been set.
func (o *CreateContractResponse) GetContractOk() (*GetContractResponseContract, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contract, true
}

// SetContract sets field value
func (o *CreateContractResponse) SetContract(v GetContractResponseContract) {
	o.Contract = v
}

func (o CreateContractResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContractResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contract"] = o.Contract

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateContractResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contract",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateContractResponse := _CreateContractResponse{}

	err = json.Unmarshal(data, &varCreateContractResponse)

	if err != nil {
		return err
	}

	*o = CreateContractResponse(varCreateContractResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "contract")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateContractResponse struct {
	value *CreateContractResponse
	isSet bool
}

func (v NullableCreateContractResponse) Get() *CreateContractResponse {
	return v.value
}

func (v *NullableCreateContractResponse) Set(val *CreateContractResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContractResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContractResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContractResponse(val *CreateContractResponse) *NullableCreateContractResponse {
	return &NullableCreateContractResponse{value: val, isSet: true}
}

func (v NullableCreateContractResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContractResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


