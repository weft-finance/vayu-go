/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListContractsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListContractsResponse{}

// ListContractsResponse struct for ListContractsResponse
type ListContractsResponse struct {
	Contracts []ListContractsResponseContractsInner `json:"contracts"`
	Total float32 `json:"total"`
	HasMore bool `json:"hasMore"`
	NextCursor *string `json:"nextCursor,omitempty"`
}

type _ListContractsResponse ListContractsResponse

// NewListContractsResponse instantiates a new ListContractsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListContractsResponse(contracts []ListContractsResponseContractsInner, total float32, hasMore bool) *ListContractsResponse {
	this := ListContractsResponse{}
	this.Contracts = contracts
	this.Total = total
	this.HasMore = hasMore
	return &this
}

// NewListContractsResponseWithDefaults instantiates a new ListContractsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListContractsResponseWithDefaults() *ListContractsResponse {
	this := ListContractsResponse{}
	return &this
}

// GetContracts returns the Contracts field value
func (o *ListContractsResponse) GetContracts() []ListContractsResponseContractsInner {
	if o == nil {
		var ret []ListContractsResponseContractsInner
		return ret
	}

	return o.Contracts
}

// GetContractsOk returns a tuple with the Contracts field value
// and a boolean to check if the value has been set.
func (o *ListContractsResponse) GetContractsOk() ([]ListContractsResponseContractsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contracts, true
}

// SetContracts sets field value
func (o *ListContractsResponse) SetContracts(v []ListContractsResponseContractsInner) {
	o.Contracts = v
}

// GetTotal returns the Total field value
func (o *ListContractsResponse) GetTotal() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ListContractsResponse) GetTotalOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ListContractsResponse) SetTotal(v float32) {
	o.Total = v
}

// GetHasMore returns the HasMore field value
func (o *ListContractsResponse) GetHasMore() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value
// and a boolean to check if the value has been set.
func (o *ListContractsResponse) GetHasMoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasMore, true
}

// SetHasMore sets field value
func (o *ListContractsResponse) SetHasMore(v bool) {
	o.HasMore = v
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *ListContractsResponse) GetNextCursor() string {
	if o == nil || IsNil(o.NextCursor) {
		var ret string
		return ret
	}
	return *o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListContractsResponse) GetNextCursorOk() (*string, bool) {
	if o == nil || IsNil(o.NextCursor) {
		return nil, false
	}
	return o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *ListContractsResponse) HasNextCursor() bool {
	if o != nil && !IsNil(o.NextCursor) {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *ListContractsResponse) SetNextCursor(v string) {
	o.NextCursor = &v
}

func (o ListContractsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListContractsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contracts"] = o.Contracts
	toSerialize["total"] = o.Total
	toSerialize["hasMore"] = o.HasMore
	if !IsNil(o.NextCursor) {
		toSerialize["nextCursor"] = o.NextCursor
	}
	return toSerialize, nil
}

func (o *ListContractsResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contracts",
		"total",
		"hasMore",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListContractsResponse := _ListContractsResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListContractsResponse)

	if err != nil {
		return err
	}

	*o = ListContractsResponse(varListContractsResponse)

	return err
}

type NullableListContractsResponse struct {
	value *ListContractsResponse
	isSet bool
}

func (v NullableListContractsResponse) Get() *ListContractsResponse {
	return v.value
}

func (v *NullableListContractsResponse) Set(val *ListContractsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListContractsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListContractsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListContractsResponse(val *ListContractsResponse) *NullableListContractsResponse {
	return &NullableListContractsResponse{value: val, isSet: true}
}

func (v NullableListContractsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListContractsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


