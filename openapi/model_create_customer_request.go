/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCustomerRequest{}

// CreateCustomerRequest struct for CreateCustomerRequest
type CreateCustomerRequest struct {
	// The name of the customer
	Name string `json:"name"`
	// The alias of the customer used to match events to the customer.
	Alias *string `json:"alias,omitempty"`
}

type _CreateCustomerRequest CreateCustomerRequest

// NewCreateCustomerRequest instantiates a new CreateCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCustomerRequest(name string) *CreateCustomerRequest {
	this := CreateCustomerRequest{}
	this.Name = name
	return &this
}

// NewCreateCustomerRequestWithDefaults instantiates a new CreateCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCustomerRequestWithDefaults() *CreateCustomerRequest {
	this := CreateCustomerRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CreateCustomerRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCustomerRequest) SetName(v string) {
	o.Name = v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *CreateCustomerRequest) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerRequest) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *CreateCustomerRequest) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *CreateCustomerRequest) SetAlias(v string) {
	o.Alias = &v
}

func (o CreateCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	return toSerialize, nil
}

func (o *CreateCustomerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCustomerRequest := _CreateCustomerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateCustomerRequest)

	if err != nil {
		return err
	}

	*o = CreateCustomerRequest(varCreateCustomerRequest)

	return err
}

type NullableCreateCustomerRequest struct {
	value *CreateCustomerRequest
	isSet bool
}

func (v NullableCreateCustomerRequest) Get() *CreateCustomerRequest {
	return v.value
}

func (v *NullableCreateCustomerRequest) Set(val *CreateCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomerRequest(val *CreateCustomerRequest) *NullableCreateCustomerRequest {
	return &NullableCreateCustomerRequest{value: val, isSet: true}
}

func (v NullableCreateCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


