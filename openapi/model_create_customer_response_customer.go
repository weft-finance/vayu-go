/*
Vayu API

The Vayu API is a RESTful API that allows you to submit events for processing and storage & manage billing related entities.           The API is secured using the Bearer Authentication scheme with JWT tokens.           To obtain a JWT token, please contact Vayu at team@withvayu.com

API version: 1.0.0
Contact: dev@withvayu.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the CreateCustomerResponseCustomer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateCustomerResponseCustomer{}

// CreateCustomerResponseCustomer struct for CreateCustomerResponseCustomer
type CreateCustomerResponseCustomer struct {
	// The name of the customer
	Name string `json:"name"`
	// The external ID of the customer
	ExternalId *string `json:"externalId,omitempty"`
	// The aliases of the customer used to match events to the customer.
	Aliases []string `json:"aliases,omitempty"`
	Address *Address `json:"address,omitempty"`
	Id string `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	AdditionalProperties map[string]interface{}
}

type _CreateCustomerResponseCustomer CreateCustomerResponseCustomer

// NewCreateCustomerResponseCustomer instantiates a new CreateCustomerResponseCustomer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateCustomerResponseCustomer(name string, id string, createdAt time.Time, updatedAt time.Time) *CreateCustomerResponseCustomer {
	this := CreateCustomerResponseCustomer{}
	this.Name = name
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewCreateCustomerResponseCustomerWithDefaults instantiates a new CreateCustomerResponseCustomer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateCustomerResponseCustomerWithDefaults() *CreateCustomerResponseCustomer {
	this := CreateCustomerResponseCustomer{}
	return &this
}

// GetName returns the Name field value
func (o *CreateCustomerResponseCustomer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerResponseCustomer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateCustomerResponseCustomer) SetName(v string) {
	o.Name = v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *CreateCustomerResponseCustomer) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerResponseCustomer) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *CreateCustomerResponseCustomer) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *CreateCustomerResponseCustomer) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *CreateCustomerResponseCustomer) GetAliases() []string {
	if o == nil || IsNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerResponseCustomer) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *CreateCustomerResponseCustomer) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *CreateCustomerResponseCustomer) SetAliases(v []string) {
	o.Aliases = v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *CreateCustomerResponseCustomer) GetAddress() Address {
	if o == nil || IsNil(o.Address) {
		var ret Address
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateCustomerResponseCustomer) GetAddressOk() (*Address, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *CreateCustomerResponseCustomer) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given Address and assigns it to the Address field.
func (o *CreateCustomerResponseCustomer) SetAddress(v Address) {
	o.Address = &v
}

// GetId returns the Id field value
func (o *CreateCustomerResponseCustomer) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerResponseCustomer) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateCustomerResponseCustomer) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CreateCustomerResponseCustomer) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerResponseCustomer) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CreateCustomerResponseCustomer) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *CreateCustomerResponseCustomer) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *CreateCustomerResponseCustomer) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *CreateCustomerResponseCustomer) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o CreateCustomerResponseCustomer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateCustomerResponseCustomer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateCustomerResponseCustomer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"id",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateCustomerResponseCustomer := _CreateCustomerResponseCustomer{}

	err = json.Unmarshal(data, &varCreateCustomerResponseCustomer)

	if err != nil {
		return err
	}

	*o = CreateCustomerResponseCustomer(varCreateCustomerResponseCustomer)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "name")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "aliases")
		delete(additionalProperties, "address")
		delete(additionalProperties, "id")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateCustomerResponseCustomer struct {
	value *CreateCustomerResponseCustomer
	isSet bool
}

func (v NullableCreateCustomerResponseCustomer) Get() *CreateCustomerResponseCustomer {
	return v.value
}

func (v *NullableCreateCustomerResponseCustomer) Set(val *CreateCustomerResponseCustomer) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateCustomerResponseCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateCustomerResponseCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateCustomerResponseCustomer(val *CreateCustomerResponseCustomer) *NullableCreateCustomerResponseCustomer {
	return &NullableCreateCustomerResponseCustomer{value: val, isSet: true}
}

func (v NullableCreateCustomerResponseCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateCustomerResponseCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


